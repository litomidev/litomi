# Cloud Build configuration for deploying the manga crawler job
# Usage: gcloud builds submit --config=cloud-run/manga-crawl/cloudbuild.yaml --substitutions=_NEON_DATABASE_URL="postgresql://...",_REGION=asia-northeast1

substitutions:
  _JOB_NAME: manga-crawl
  _REGION: asia-northeast1
  _ARTIFACT_REGISTRY_REPO: cloud-run-jobs
  _SERVICE_ACCOUNT_NAME: manga-crawl-sa
  _CRAWL_SCHEDULE: '0 * * * *'
  _NEON_DATABASE_URL: ''

steps:
  # Create Artifact Registry repository if it doesn't exist
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if ! gcloud artifacts repositories describe ${_ARTIFACT_REGISTRY_REPO} --location=${_REGION} --project=${PROJECT_ID} >/dev/null 2>&1; then
          gcloud artifacts repositories create ${_ARTIFACT_REGISTRY_REPO} \
            --repository-format=docker \
            --location=${_REGION} \
            --description="Cloud Run Jobs Docker images" \
            --project=${PROJECT_ID}
        fi

  # Build the Docker image with buildx for linux/amd64
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'buildx'
      - 'build'
      - '--platform=linux/amd64'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_JOB_NAME}'
      - '-f'
      - 'cloud-run/manga-crawl/Dockerfile'
      - '--push'
      - '.'

  # Deploy to Cloud Run Jobs
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'jobs'
      - 'deploy'
      - '${_JOB_NAME}'
      - '--image=${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_JOB_NAME}'
      - '--region=${_REGION}'
      - '--parallelism=1'
      - '--max-retries=1'
      - '--task-timeout=30m'
      - '--memory=2Gi'
      - '--cpu=2'
      - '--service-account=${_SERVICE_ACCOUNT_NAME}@${PROJECT_ID}.iam.gserviceaccount.com'
      - '--set-env-vars=NODE_ENV=production'
      - '--set-env-vars=NEON_DATABASE_URL=${_NEON_DATABASE_URL}'
      - '--project=${PROJECT_ID}'

  # Set up Cloud Scheduler
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        SCHEDULER_JOB_NAME="${_JOB_NAME}-schedule"

        # Delete existing scheduler job if it exists
        if gcloud scheduler jobs describe ${SCHEDULER_JOB_NAME} \
          --location=${_REGION} \
          --project=${PROJECT_ID} >/dev/null 2>&1; then
          gcloud scheduler jobs delete ${SCHEDULER_JOB_NAME} \
            --location=${_REGION} \
            --project=${PROJECT_ID} \
            --quiet
        fi

        # Create new scheduler job
        gcloud scheduler jobs create http ${SCHEDULER_JOB_NAME} \
          --location=${_REGION} \
          --schedule="${_CRAWL_SCHEDULE}" \
          --uri="https://${_REGION}-run.googleapis.com/apis/run.googleapis.com/v1/namespaces/${PROJECT_ID}/jobs/${_JOB_NAME}:run" \
          --http-method=POST \
          --oauth-service-account-email=${_SERVICE_ACCOUNT_NAME}@${PROJECT_ID}.iam.gserviceaccount.com \
          --project=${PROJECT_ID}

images:
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_JOB_NAME}'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
